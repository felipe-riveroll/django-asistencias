services:

  web:
    build: .
    container_name: asistencias_web
    command: >
      sh -c "python manage.py collectstatic --noinput && gunicorn asistencias.wsgi:application --bind 0.0.0.0:8000 --workers=3"
    volumes:
      - ./src:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true

  nginx:
    image: nginx:1.25
    container_name: asistencias_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web

  db:
    image: postgres:17
    container_name: asistencias_db
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  static_volume:
  media_volume: